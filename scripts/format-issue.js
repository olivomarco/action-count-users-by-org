const fs = require('fs');

function formatIssueContent() {
  const dataFile = process.env.USER_DATA_FILE || 'users-data.json';
  
  if (!fs.existsSync(dataFile)) {
    throw new Error(`Data file ${dataFile} not found`);
  }

  const data = JSON.parse(fs.readFileSync(dataFile, 'utf8'));
  const generatedDate = new Date(data.generatedAt).toLocaleDateString('en-US', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  let issueContent = `# Enterprise User Report

**Generated:** ${generatedDate}  
**Total Organizations:** ${data.summary.totalOrganizations}  
**Total Users:** ${data.summary.totalUsers}

---

## 📊 Organization Summary

| Organization | Users | Description |
|-------------|-------|-------------|
`;

  // Add summary table rows
  for (const org of data.organizations) {
    const description = org.description.length > 80 
      ? org.description.substring(0, 77) + '...' 
      : org.description;
    
    issueContent += `| [${org.displayName}](${org.url}) | **${org.userCount}** | ${description} |\n`;
  }

  issueContent += `
---

## 👥 Detailed User Information

`;

  // Add detailed user information for each organization
  for (const org of data.organizations) {
    issueContent += `
### 🏢 ${org.displayName} (${org.userCount} users)

| Username | Display Name | Role | Company | Location |
|----------|-------------|------|---------|----------|
`;

    for (const user of org.users) {
      const displayName = user.displayName !== user.username ? user.displayName : '-';
      const company = user.company !== 'N/A' ? user.company : '-';
      const location = user.location !== 'N/A' ? user.location : '-';
      
      issueContent += `| [@${user.username}](${user.profileUrl}) | ${displayName} | \`${user.role}\` | ${company} | ${location} |\n`;
    }

    issueContent += '\n';
  }

  issueContent += `
---

## 📝 Report Details

- **Report Type:** Automated Enterprise User Audit
- **Scope:** All accessible organizations in the enterprise
- **Data Collection:** GitHub Enterprise Cloud API
- **Next Report:** Tomorrow at the same time

### 🔄 Automation Info

This report is automatically generated by GitHub Actions and runs every night at 2 AM UTC. 
The data includes all users across organizations that the configured Personal Access Token has access to.

### 📋 Actions for Managers

1. **Review user counts** in the summary table above
2. **Check user roles** in the detailed sections
3. **Verify user information** is up to date
4. **Report any discrepancies** to the IT team

---

*This issue was automatically created by the Enterprise User Report workflow*
`;

  // Write the formatted content to file
  fs.writeFileSync('issue-content.md', issueContent);
  
  console.log('✅ Issue content formatted and written to issue-content.md');
  console.log(`📊 Report contains ${data.summary.totalOrganizations} organizations and ${data.summary.totalUsers} users`);
}

// Run the formatting function
try {
  formatIssueContent();
} catch (error) {
  console.error('❌ Error formatting issue content:', error.message);
  process.exit(1);
}